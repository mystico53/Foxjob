rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user has admin claim
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    // Helper function to check if user ID matches
    function isCurrentUser(userId) {
      return request.auth.uid == userId;
    }

    // ADMIN DASHBOARD ACCESS
    // Admin users can read all documents
    match /{document=**} {
      // For some reason, the admin claim might not be working properly in staging
      // So we also explicitly allow access to specific known admin UIDs
      allow read, list, get: if isAdmin() || 
        request.auth.uid == 'VCvUK0pLeDVXJ0JHJsNBwxLgvdO2' || // Your UID from test results
        request.auth.uid == '6s2CLcw8fpRkS79tjwxy1w7Mxbw1' ||
        request.auth.uid == 'U0KC8SusvzcGV6Nstvc6b82HVHh2';
    }
    
    // ACCESS TO TOP-LEVEL COLLECTIONS BY NAME
    // These rules provide a fallback access pattern by collection name
    
    // Allow any authenticated user to read users collection
    match /users/{userId} {
      allow get: if isAuthenticated();
      allow list: if isAdmin() || 
        request.auth.uid == 'VCvUK0pLeDVXJ0JHJsNBwxLgvdO2' ||
        request.auth.uid == '6s2CLcw8fpRkS79tjwxy1w7Mxbw1' ||
        request.auth.uid == 'U0KC8SusvzcGV6Nstvc6b82HVHh2';
      allow write, create, update, delete: if isAuthenticated() && isCurrentUser(userId);
      
      // All subcollections under a user's document
      match /{subcollection}/{docId} {
        allow read: if isAuthenticated() && (isCurrentUser(userId) || isAdmin() ||
          request.auth.uid == 'VCvUK0pLeDVXJ0JHJsNBwxLgvdO2' ||
          request.auth.uid == '6s2CLcw8fpRkS79tjwxy1w7Mxbw1' ||
          request.auth.uid == 'U0KC8SusvzcGV6Nstvc6b82HVHh2');
        allow write, create, update, delete: if isAuthenticated() && isCurrentUser(userId);
      }
    }
    
    // SPECIFIC COLLECTION WRITE PERMISSIONS
    // These collections have specific write permissions
    
    // jobBatches collection
    match /jobBatches/{batchId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated();
    }
    
    // Allow write to scrapedJobs collection
    match /scrapedJobs/{jobId} {
      allow read: if isAuthenticated();
      allow write, create, update, delete: if isAuthenticated();
    }
    
    // UserCollections at top level
    match /UserCollections/{collectionId} {
      allow read: if isAuthenticated();
      allow write, create, update, delete: if isAuthenticated();
    }

    // Other specific collections
    match /pending_users/{pendingId} {
      allow read: if isAuthenticated();
      allow write, create, update, delete: if isAuthenticated();
    }

    match /test/{docId} {
      allow read: if isAuthenticated();
      allow write, create, update, delete: if isAuthenticated();
    }

    match /dev-test/{docId} {
      allow read: if isAuthenticated();
      allow write, create, update, delete: if isAuthenticated();
    }
  }
}