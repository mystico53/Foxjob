rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the users collection and subcollections
    match /users/{userId} {
      // Allow users to read/write their own documents
      allow read, write: if isOwner(userId);
      
      // Rules for UserCollections subcollection
      match /UserCollections/{document=**} {
        allow read, write: if isOwner(userId);
      }
      
      // Rules for jobs subcollection - explicitly allow listing
      match /jobs/{jobId} {
        allow read, write, list: if isOwner(userId);
      }

      // Rules for processed subcollection - explicitly allow listing
      match /processed/{docId} {
        allow read, write, list: if isOwner(userId);
      }
    }

    // Rest of your rules remain the same
    match /googleSubToUid/{googleSubId} {
      allow read: if false;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    match /pending_users/{pendingId} {
      allow read, write: if isAuthenticated();
    }

    match /test/{docId} {
      allow read, write: if isAuthenticated();
    }

    match /dev-test/{docId} {
      allow read, write: if isAuthenticated();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}